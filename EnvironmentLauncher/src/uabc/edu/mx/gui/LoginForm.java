/*
 * 

 * Copyright (C)  2013 Rosendo R. Sosa. .
 *
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the License, or (at your option) any later
 * version.
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 */
package uabc.edu.mx.gui;

import common.integration.ServiceLocator;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import uabc.edu.mx.data.session.User;
import uabc.edu.mx.launcher.jabber.SingletonMyMessageProcesor;
import uabc.edu.mx.message.listener.MessageListener;
import uabc.edu.mx.message.Message;
import uabc.edu.mx.message.MessageType;
import uabc.xmpp.entities.OfUser;
import utils.Configuration;

/**
 *
 * @author Rosendo R. Sosa.
 */
public class LoginForm extends javax.swing.JFrame implements ActionListener, MessageListener {

    /**
     * Creates new form LoginForm
     */
    public LoginForm() {
        initComponents();
        SingletonMyMessageProcesor.getInstance().registerListener(this, this.toString());
        SingletonMyMessageProcesor.getInstance().notifyMessage(Configuration.server, this, this, MessageType.MESSAGE_XMPP_REQUEST_SERVER);
        configMenuItem.addActionListener(this);
        entrarBttn.addActionListener(this);
        messageLbl.setOpaque(true);
        messageLbl.setBackground(Color.red);
        messageLbl.setForeground(Color.WHITE);
        messageLbl.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton1 = new javax.swing.JRadioButton();
        entrarBttn = new javax.swing.JButton();
        unameTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        upassTextField = new javax.swing.JPasswordField();
        messageLbl = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        optionMenu = new javax.swing.JMenu();
        configMenuItem = new javax.swing.JMenuItem();

        jRadioButton1.setText("jRadioButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        entrarBttn.setText("Entrar");
        entrarBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entrarBttnActionPerformed(evt);
            }
        });

        unameTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        unameTextField.setToolTipText("Nombre de usuario");
        unameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unameTextFieldActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Usuario:");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Contraseña:");

        upassTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        messageLbl.setBackground(new java.awt.Color(255, 51, 51));
        messageLbl.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        messageLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        messageLbl.setText("jLabel3");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/edumat_logo.png"))); // NOI18N

        jMenuBar1.setBackground(new java.awt.Color(204, 204, 255));

        optionMenu.setBackground(new java.awt.Color(204, 204, 255));
        optionMenu.setText("Opciones");
        optionMenu.setToolTipText("");
        optionMenu.setFocusPainted(true);

        configMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        configMenuItem.setText("Configuración");
        configMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                configMenuItemActionPerformed(evt);
            }
        });
        optionMenu.add(configMenuItem);

        jMenuBar1.add(optionMenu);

        setJMenuBar(jMenuBar1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, messageLbl, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(jLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jLabel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(entrarBttn, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(upassTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                            .add(unameTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE))
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(jLabel3)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(unameTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(12, 12, 12)
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(upassTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(entrarBttn)
                .add(78, 78, 78)
                .add(messageLbl)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void unameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unameTextFieldActionPerformed

    private void configMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_configMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_configMenuItemActionPerformed

    private void entrarBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entrarBttnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_entrarBttnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new LoginForm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem configMenuItem;
    private javax.swing.JButton entrarBttn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JLabel messageLbl;
    private javax.swing.JMenu optionMenu;
    private javax.swing.JTextField unameTextField;
    private javax.swing.JPasswordField upassTextField;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {

        if (e.getSource() == entrarBttn) {
            if (unameTextField.getText().trim().length() > 3 && upassTextField.getText().trim().length() > 3) {
                User user = new User(unameTextField.getText(), upassTextField.getText());
                Message message = new Message(user, this, this, MessageType.MESSAGE_REQUEST_LOGIN);
                SingletonMyMessageProcesor.getInstance().notifyMessage(message);


            } else {
                messageLbl.setText("Datos Incorrectos");
                messageLbl.setVisible(true);

            }
        } else if (e.getSource() == configMenuItem) {

            ConfiguracionDialog dialog = new ConfiguracionDialog(this, true);
            dialog.setVisible(true);
        }


    }

    @Override
    public void messageReciever(Message msg) {
        switch (msg.getType()) {

            case MESSAGE_LOGIN_OK:
                ConfiguratorForm configForm = new ConfiguratorForm();
                configForm.setVisible(true);
                messageLbl.setVisible(false);
                Configuration.sessionDataToSend.setCurrentModerator(this.unameTextField.getText());
                
                setVisible(false);
                ServiceLocator.getInstance().setTipo(OfUser.class);
                System.out.println("LOGIN_OK");
                break;
            case MESSAGE_LOGIN_ERROR:
                messageLbl.setText("Datos Incorrectos");
                messageLbl.setVisible(true);
                break;
            case MESSAGE_SEVER_NOT_FOUND:
                messageLbl.setText("Datos Incorrectos");
                messageLbl.setVisible(true);
                break;
            case MESSAGE_SERVER_FOUND:
                System.out.println("Servidor encontrado");
                break;

        }

    }

    @Override
    public String toString() {
        return this.getClass().getName();
    }
}
